name: CMake-release

on:
  push:
    tags:
      - 'v*'

env:
  BUILD_TYPE: Release

permissions:
  contents: read
  actions: write

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
          submodules: recursive

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Prepare binary
      run: |
        cp ${{github.workspace}}/build/bin/chat chat
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          mv chat chat-windows-latest.exe
        else
          mv chat chat-${{ matrix.os }}
        fi

    - name: Upload binary
      uses: actions/upload-artifact@v2
      with:
        name: chat-${{ matrix.os }}
        path: chat-${{ matrix.os }}*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.DEPLOY_KEY }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Upload artifacts to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.DEPLOY_KEY }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/chat-ubuntu-latest
        asset_name: chat-ubuntu-latest
        asset_content_type: application/octet-stream

    - name: Upload artifacts to release (macOS)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.DEPLOY_KEY }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/chat-macos-latest
        asset_name: chat-macos-latest
        asset_content_type: application/octet-stream

    - name: Upload artifacts to release (Windows)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.DEPLOY_KEY }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/chat-windows-latest.exe
        asset_name: chat-windows-latest.exe
        asset_content_type: application/octet-stream
